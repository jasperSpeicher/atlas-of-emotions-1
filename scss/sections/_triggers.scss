#triggers {
	position: absolute;
	width: 100%;
	height: 100%;
	min-height: 600px;
	.small-screen & {
		min-height: 0px;
	}

	top: 0;
	left: 50%;
	margin-left: -50%;

	text-align: center;
	pointer-events: none;

	.triggers-container {
		position: absolute;
		width: 100%;
		height: 100%;

		opacity: 0.0;

		&.transitioning {
			transition-property: transform, opacity;
			transition-duration: #{$emotions-panX-duration}s;
			transition-timing-function: ease-in-out, cubic-bezier(0.9, 0.0, 0.5, 1.0);
		}

		&.active {
			opacity: 1.0;

			.label-container {
				.label,
				.emotion-label {
					h3,
					h4 {
						pointer-events: auto;
						cursor: pointer;
					}

					// override _labels.scss
					.small-screen & {
						opacity: 1.0;
					}
				}
			}
		}
	}

	.graph-container {
		position: absolute;
		bottom: 0;
		left: 50%;

		width: $triggers-graph-width;
		height: 100%;
		margin-left: -$triggers-graph-width/2;

		path.halo {
			fill-opacity: 0.75;
		}

		g {
			opacity: 1.0;
			transition: opacity 0.5s;
			&.muted {
				opacity: 0.3;
			}
		}
	}

	.label-container {
		position: absolute;
		width: 100%;
		height: calc(100% - #{$triggers-bottom});
		bottom: $triggers-bottom;

		.small-screen & {
			height: calc(100% - #{$triggers-bottom-small});
			bottom: $triggers-bottom-small;
		}

		.label {
			.small-screen & {
				display: none;
			}

			position: absolute;

			@include emotion-color;

			h3, h4 {
				margin: 0;
			}

			h4 {
				font-size: 0.8em;
				text-transform: lowercase;
				&:first-letter {
					text-transform: uppercase;
				}

				// pointer-events: auto;
				// cursor: pointer;
			}
		}

		.arrows-container {
			position: absolute;
			left: 0;
			top: 0;
		}

		.arrow {
			@include emotion-stroke-color;
			@include emotion-fill-color;
			line {
				stroke-width: 3;
			}
			path {
				stroke: none;
			}
		}

		.filtered-by-database {
			opacity: 1.0;
			transition: opacity 0.5s;
			&.muted {
				opacity: 0.3;
			}
		}
	}

	.horizon {
		position: absolute;
		bottom: 0;
		width: 100%;
		height: $triggers-bottom;
		.small-screen & {
			height: $triggers-bottom-height-small;
			bottom: $triggers-bottom-small - $triggers-bottom-height-small;
		}
		background: linear-gradient(to bottom, rgba(245,245,245,1.0) 0%,rgba(255,255,255,1.0) 100%);

		opacity: 0.0;
		transition: opacity 0.5s;
		&.visible {
			opacity: 1.0;
			transition: opacity 2.0s;
		}
	}
}

.trigger-phase-labels,
.universal-learned-labels {
	position: absolute;
	left: 50%;
	bottom: 0;

	text-align: center;
	@include emotion-color;
}
.trigger-phase-labels {
	.emotion-label {
		opacity: 1.0;
		transform: translate(-50%, -50%);

		.small-screen & {
			transform: translate(-50%, -20%);
		}
	}
}
.small-screen .universal-learned-labels {
	h3 {
		white-space: normal;
		max-width: 10rem;
		text-align: center;
		transform: translate(-50%,-50%);
	}
	.universal h3 {
		// no idea why this label is not lining up correctly.
		// manual tweak.
		transform: translate(-70%,-50%);
	}
}


#trigger-hit-area-container {
	position: absolute;
	width: 100%;
	height: calc(100% - #{$triggers-bottom});
	bottom: $triggers-bottom;
	.small-screen & {
		height: calc(100% - #{$triggers-bottom-small});
		bottom: $triggers-bottom-small;
	}

	svg {
		stroke: none;
		fill: lime;
		fill-opacity: 0;
	}

	.hit-area {
		pointer-events: auto;
		cursor: default;
	}
}
