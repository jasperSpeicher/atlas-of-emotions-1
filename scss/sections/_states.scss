#states {
	position: absolute;
	width: 100%;
	height: 100%;
	min-height: 600px;
	overflow-x: hidden;
	overflow-y: hidden;

	top: 0;
	left: 50%;
	margin-left: -50%;

	text-align: center;
	opacity: 1.0;

	transform: scale(1.0);
	transition-property: transform, top, opacity;
	transition-duration: #{$states-backgrounded-duration-in}s, #{$states-backgrounded-duration-in}s, 0.5s;
	transition-timing-function: cubic-bezier(0.4, 0.4, 0.35, 1), cubic-bezier(.81,.34,.63,.85), ease;

	&.backgrounded {
		transform: scale($states-backgrounded-scale);
		top: $states-backgrounded-top;

		// tie `transform` and `top` transitions when animating between any non-states sections,
		// to prevent the two transitions from drifting apart from each other,
		// but use a different transition for `transform` when animating between states and any other section.
		transition-timing-function: cubic-bezier(.81,.34,.63,.85), cubic-bezier(.81,.34,.63,.85), ease;
		&.states-in-out {
			transition-timing-function: cubic-bezier(0.4, 0.4, 0.35, 1), cubic-bezier(.81,.34,.63,.85), ease;
		}

		&.actions {
			// states appear a bit larger in actions than in triggers and moods
			transform: scale($states-backgrounded-actions-scale);
			top: $states-backgrounded-actions-top;
		}

		/*
		// TODO: prevent visible edge to states transitions when backgrounded
		width: calc(100% / #{$states-backgrounded-scale});
		left: calc(50% / #{$states-backgrounded-scale});
		margin-left: calc(-50% / #{$states-backgrounded-scale});
		*/

		&.triggers {
			// align bottom of states graph, which is scaled and translated,
			// with bottom of screen - 20%. this math is basically:
			// (scaled states offset) + scale * (states graph offset from parent + states graph bottom margin) + triggers bottom
			top: calc((100% * (1 - #{$states-backgrounded-scale}) / 2) +
				#{$states-backgrounded-scale} * (#{$states-containers-bottom} + 50px) - #{$triggers-bottom});
		}

		&.faded {
			opacity: 0.3;
		}
	}

	.graph-container,
	.label-container {
		position: absolute;
		bottom: $states-containers-bottom;
		left: 50%;
		margin-left: -$states-graph-width/2;
		min-height: 400px;

		opacity: 0.0;
		pointer-events: none;

		&.transitioning {
			transition-property: transform, opacity;
			transition-duration: #{$emotions-panX-duration}s;
			transition-timing-function: ease-in-out, cubic-bezier(0.9, 0.0, 0.5, 1.0);
		}

		&.active {
			pointer-events: auto;
			opacity: 1.0;
		}
	}

	.graph-container {
		width: $states-graph-width;
		height: 70%;

		.axis {
			line,
			path {
				fill: none;
				stroke: $text-color;
				shape-rendering: crispEdges;
			}

			&.labels {
				line,
				path {
					display: none
				}
				text {
					@extend %raleway-light;
					font-size: 0.8em;
				}
			}

			opacity: 0.0;
			transition: opacity #{$label-fade-in-time} cubic-bezier(0.645, 0.045, 0.355, 1);

			&.visible {
				opacity: 1.0;
			}
		}

		.area {
			mix-blend-mode: multiply;
			cursor: pointer;

			opacity: 1.0;
			transition: opacity #{$states-highlighted-out}s ease-out;
			&.unhighlighted {
				opacity: 0.2;
				transition: opacity #{$states-highlighted-in}s ease-in;
			}
		}
	}

	.label-container {
		top: 15%;

		div {
			position: absolute;
			pointer-events: none;

			opacity: 0.0;
			transition: opacity #{$label-fade-in-time} cubic-bezier(0.645, 0.045, 0.355, 1);

			&.visible {
				opacity: 1.0;
			}

			h3 {
				transform: translate(-50%, -50%);
				margin: 0;
				cursor: pointer;

				opacity: 1.0;
				transition: opacity #{$states-highlighted-out}s ease-out;
				&.unhighlighted {
					opacity: 0.2;
					transition: opacity #{$states-highlighted-in}s ease-in;
				}
			}
		}
		&.active h3 {
			pointer-events: auto;
		}

		.label {
			@include emotion-color;
			white-space: nowrap;
		}

	}

	.states-defs {
		pointer-events: none;
	}
}

#backgrounded-state-label {
	position: absolute;
	top: 20%;
	left: 50%;

	text-align: center;
	pointer-events: none;

	@include emotion-color;
	white-space: nowrap;

	transition: opacity #{$states-highlighted-out}s ease-out;
	opacity: 0.0;

	&.visible {
		transition: opacity #{$states-highlighted-in}s ease-in;
		opacity: 1.0;
	}

	h3 {
		transform: translate(-50%, -50%);
		margin: 0;
		font-size: calc(0.66667em / #{$states-backgrounded-scale});
		text-transform: uppercase;
	}
}
