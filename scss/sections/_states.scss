#states {
	position: absolute;
	width: 100%;
	height: 100%;
	min-height: 600px;

	top: 0;
	left: 50%;
	margin-left: -50%;

	text-align: center;

	transform: scale(1.0);
	transition-property: transform, top;
	transition-duration: 1.5s, 1.5s;
	transition-timing-function: cubic-bezier(0.4, 0.4, 0.35, 1), cubic-bezier(.81,.34,.63,.85);

	&.backgrounded {
		transform: scale($states-backgrounded-scale);
		top: $states-backgrounded-top;
		&.triggers {
			// align bottom of states graph, which is scaled and translated,
			// with bottom of screen. this math is basically:
			// (scaled states offset) + scale * (states graph offset from parent + states graph bottom margin)
			top: calc((100% * (1 - #{$states-backgrounded-scale}) / 2) +
				#{$states-backgrounded-scale} * (#{$states-containers-bottom} + 50px));
		}
	}

}

#state-graph-container,
#state-labels {
	position: absolute;
	bottom: $states-containers-bottom;
	left: 50%;
	margin-left: -$states-graph-width/2;
	min-height: 400px;
}
#state-graph-container {
	width: $states-graph-width;
	height: 80%;
}
#state-labels {
	top: 15%;
}

#state-graph-container {
	.axis {
		line,
		path {
			fill: none;
			stroke: $text-color;
			shape-rendering: crispEdges;
		}

		&.labels {
			line,
			path {
				display: none
			}
			text {
				@extend %raleway-light;
				font-size: 0.8em;
			}
		}

		opacity: 0.0;
		transition: opacity #{$label-fade-in-time} cubic-bezier(0.645, 0.045, 0.355, 1);

		&.visible {
			opacity: 1.0;
		}
	}

	.area {
		mix-blend-mode: multiply;
		cursor: pointer;
	}
}

#state-labels {
	div {
		position: absolute;
		pointer-events: none;

		opacity: 0.0;
		transition: opacity #{$label-fade-in-time} cubic-bezier(0.645, 0.045, 0.355, 1);

		&.visible {
			opacity: 1.0;
		}

		h3 {
			// margin-left: -1em;
			cursor: pointer;
			pointer-events: auto;
		}
	}

	.label {
		@include emotion-color;
		white-space: nowrap;
	}

}

#backgrounded-state-label {
	position: absolute;
	text-align: center;
	left: 50%;
	pointer-events: none;
	
	@include emotion-color;
	white-space: nowrap;

	// TODO: transition opacity
	display: none;
	opacity: 0.0;

	&.visible {
		display: block;
		opacity: 1.0;
	}

	h3 {
		margin-left: -50%;
		font-size: calc(100% / #{$states-backgrounded-scale});
		text-transform: uppercase;
	}
}

#temp-states-nav {
	position: absolute;
	height: 100%;
	right: 3%;
	pointer-events: none;

	.prev {
		position: absolute;
		top: 3%;
		right: 0;
		pointer-events: auto;
		white-space: nowrap;
	}

	.next {
		position: absolute;
		bottom: 3%;
		right: 0;
		pointer-events: auto;
		white-space: nowrap;
	}

	opacity: 0.0;
	-webkit-transition: opacity 1s;
	transition:         opacity 1s;
	&.visible {
		opacity: 1.0;
	}
}